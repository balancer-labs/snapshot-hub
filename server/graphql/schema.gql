scalar JSONObject

type Space {
  id: String!
  name: String!
  network: String!
  symbol: String
  private: Boolean
  members: [String]
  about: String
  twitter: String
  github: String
  strategies: [Strategy]
  filters: Filter
  plugins: JSONObject
}

type Filter {
  defaultTab: String,
  minScore: Int,
  onlyMembers: Boolean,
  invalids: [
    String
  ]
}

type Strategy {
  name: String!
  params: JSONObject
}

type User {
  address: String!
  profile: Profile
}

type Profile {
  ens: String
  name: String
  image: String
}

type Proposal {
  id: String!
  author: User!
  timestamp: Int!
  space: Space!
  name: String
  body: String
  state: String
  start: Int
  end: Int
  snapshot: String
}

type Query {
  timeline(
    first: Int
    skip: Int
    id: String
    spaces: [String]
    state: String
  ): [Proposal]

  spaces(
    first: Int
    skip: Int
    id: String
    spaces: [String]
  ): [Space]
}
